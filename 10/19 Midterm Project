var xPos = 400; // x position of the ball
var yPos = 10; // y position of the ball
var xVel = 5; // x velocity of the ball
var yVel = 5; // y velocity of the ball
var redVal = 0;
var blueVal = 255;
var xTopRect = 300; // x position of the center of top board
var yTopRect = 0; // y position of the center of top board
var xBottomRect = 300; // x position of the center of bottom board
var yBottomRect = 790; // y position of the center of bottom board
var board = 50; // half length of the boards
var scoreTop = 0; 
var scoreBottom = 0; 


function setup(){
    createCanvas(600,800);
}

function draw(){
    background(220,255,220);
    // make the backgrounf a sense of soccor field
    fill(255);
    noStroke();
    ellipse(300,400,200,200);
    fill(220,255,220);
    ellipse(300,400,190,190);
    fill(255);
    rect(0,398,600,4);
    // create and move the ball
    createBall();
    xPos+=xVel;
    yPos+=yVel;
    // create the tow board
    fill(255,0,0);
    rect(xBottomRect-board,yBottomRect,2*board,10);
    fill(0,0,255);
    rect(xTopRect-board,yTopRect,2*board,10);
    // two boards become shorter due to the time
    board-=0.03;
    // bounce back
    if(xPos>width||xPos<0){ 
        xVel*=-1;
    }
    else if(yPos==yBottomRect&&onBottomBoard()){  
        yVel*=-1;
        scoreBottom+=(int)(50-board); // the shorter the board is, the higher the score player will gain
        redVal = 255;
        blueVal = 0;
    }
    else if(yPos==yTopRect+10&&onTopBoard()){  
        yVel*=-1;
        scoreTop+=(int)(50-board); // the shorter the board is, the higher the score player will gain
        redVal = 0;
        blueVal = 255;
    }
    // show the score on the side on screen
    textSize(20);
    fill(0,0,255);
    text("Score: ",10,25)
    text(scoreTop,75,25);
    fill(255,0,0);
    text("Score: ",10,790)
    text(scoreBottom,75,790);
    // judge if the game end
    endGame();
}

// create ball and change color
function createBall(){
    fill(redVal,0,blueVal);
    ellipse(xPos,yPos,20,20);
}

//test if ball should be bounce back by the bottom board
function onBottomBoard(){
    return (xPos<=xBottomRect+board&&xPos>=xBottomRect-board);
}

//test if ball should be bounce back by the top board
function onTopBoard(){
    return (xPos<=xTopRect+board&&xPos>=xTopRect-board);
}

// keyboard control system
function keyTyped(){
    if(key === 'a'){
        xTopRect-=40;
    } 
    else if(key === 'd'){
        xTopRect+=40;
    }
    else if(key === 'w'){
        yTopRect-=10;
    } 
    else if(key === 's'){
        yTopRect+=10;
    }
    else if(key === 'j'){
        xBottomRect-=40;
    } 
    else if(key === 'l'){
        xBottomRect+=40;
    }
    else if(key === 'i'){
        yBottomRect-=10;
    } 
    else if(key === 'k'){
        yBottomRect+=10;
    }
}

// end the game and show all details
function endGame(){
    if(yPos > height){ 
    	clear();
        background(0);
        textSize(50);
        text("Blue Wins!",170,370);
        textSize(20);
        text("Blue Score: ",230,420)
        text(scoreTop,340,420);
        text("Red Score: ",233,445)
        text(scoreBottom,337,445);
        textSize(15);
        text("for Jackie, my best friend",205,780);
    }
    if(yPos < 0){
    	clear();
        background(0);
        textSize(50);
        text("Red Wins!",170,370);
        textSize(50);
        text("Blue Wins!",170,370);
        textSize(20);
        text("Blue Score: ",230,420)
        text(scoreTop,340,420);
        text("Red Score: ",233,445)
        text(scoreBottom,337,445);
        textSize(15);
        text("for Jackie, my best friend",205,780);
    }
}
